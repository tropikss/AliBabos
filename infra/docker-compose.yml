services:

  #===================================================
  #                 Infrastructure
  #===================================================

  kafka:
    image: apache/kafka-native:latest
    container_name: kafka
    ports:
      - "9092:9092"
    env_file:
      - .env.kafka
    volumes:
      - kafka_data:/var/lib/kafka
    user: "root"
    command: sh -c "chown -R 1000:1000 /var/lib/kafka && su appuser -c '/etc/kafka/docker/run'"
    networks:
      - microservices-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8888:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - microservices-network

  eureka-server:
    build: ../backend-alibabos/eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservices-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  gateway:
    build: ../backend-alibabos/graphql-gateway
    container_name: gateway
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network


networks:
  microservices-network:
    external: true
    name: microservices-network

volumes:
  kafka_data: